- name: Install docker and containerd
  hosts: '*'
  gather_facts: yes
  tasks:
    - name: install dependencies
      ansible.builtin.apt:
        name: '{{ item }}'
        state: present
      loop:
        - nfs-common
        - ca-certificates
        - curl
        - gnupg
        - lsb-release
        - apt-transport-https
        - zsh

    - name: create repo folder
      file:
        path: ~/repos 
        state: directory
        mode: u+rwx

    - name: install oh-my-zsh
      shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"

    - name: change default shell
      shell: chsh -s /bin/zsh

    - name: install zsh autocomplete
      git:
        repo: https://github.com/marlonrichert/zsh-autocomplete.git
        dest: ~/repos
        depth: 1

    - name: install nvm
      ansible.builtin.shell: >
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
      args:
        creates: "{{ ansible_env.HOME }}/.nvm/nvm.sh"

    - name: 
      get_url:
        url: https://github.com/neovim/neovim/releases/latest/download/nvim.appimage
        dest: /usr/bin/nvim
        mode: u+x

    - name: install neovim packer
      git:
        repo: https://github.com/wbthomason/packer.nvim
        dest: ~/.local/share/nvim/site/pack/packer/start/packer.nvim
        depth: 1

    - name: copy neovim config
      copy:
        src: ../nvim/
        dest: ~/.config/nvim/

    - name: copy bashrc
      copy:
        src: ../bash/.bashrc
        dest: /etc/profile

    - name: copy zshrc
      copy:
        src: ../zsh/.zshrc
        dest: ~/.zshrc

    - name: install k9s
      shell: curl -sS https://webi.sh/k9s | sh

    - name: install kubens
      shell: curl -sS https://webi.sh/kubens | sh

    - name: install kubectx
      shell: curl -sS https://webi.sh/kubectx | sh

    - name: create apt keyring
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: a+rwx
        recurse: yes

    - name: add key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/debian/gpg
        state: present
        keyring: /etc/apt/keyrings/docker.gpg

    - name: add repo
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable"
        state: present

    - name: apt update
      ansible.builtin.apt:
        update_cache: yes

    - name: install docker and containerd
      ansible.builtin.apt:
        name: '{{ item }}'
        state: present
      loop:
        - docker-ce
        - docker-ce-cli
        - containerd.io
        - docker-compose-plugin
      notify: apply containerd config file
    
    - name: download minikube
      get_url:
        url: https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
        dest: /tmp/

    - name: install minikube
      shell: install /tmp/minikube-linux-amd64 /usr/local/bin/minikube
        
    - name: add key
      ansible.builtin.apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        keyring: /etc/apt/keyrings/kubernetes-archive-keyring.gpg
        state: present

    - name: add repo
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main"
        state: present

    - name: apt update
      ansible.builtin.apt:
        update_cache: yes

    - name: install kubernetes
      ansible.builtin.apt:
        name: '{{ item }}'
        state: present
      loop:
        - kubectl

  handlers:
    - name: apply containerd config file
      ansible.builtin.shell: containerd config default > /etc/containerd/config.toml
      notify:
        - replace systemdgroup
        - restart containerd

    - name: replace systemdgroup
      ansible.builtin.shell: sed -i -e 's/SystemdCgroup = false/SystemdCgroup = true/' /etc/containerd/config.toml

    - name: restart containerd
      ansible.builtin.service:
        name: containerd
        state: restarted
